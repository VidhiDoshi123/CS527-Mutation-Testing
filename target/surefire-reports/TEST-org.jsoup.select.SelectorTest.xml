<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="org.jsoup.select.SelectorTest" time="0.006" tests="62" errors="62" skipped="0" failures="0">
  <properties>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="java.vm.version" value="19.0.2+7-44"/>
    <property name="sun.boot.library.path" value="/Library/Java/JavaVirtualMachines/jdk-19.jdk/Contents/Home/lib"/>
    <property name="maven.multiModuleProjectDirectory" value="/Users/aparna/Desktop/527FINAL/Mid-termProject/jsoup"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="path.separator" value=":"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/Users/aparna/Desktop/527FINAL/Mid-termProject/jsoup"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="java.runtime.version" value="19.0.2+7-44"/>
    <property name="os.arch" value="aarch64"/>
    <property name="java.io.tmpdir" value="/var/folders/14/md054r_x3nbfh55f96clkh280000gn/T/"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="stderr.encoding" value="UTF-8"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="classworlds.conf" value="/opt/homebrew/Cellar/maven/3.8.7/libexec/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="stdout.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/aparna/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="maven.conf" value="/opt/homebrew/Cellar/maven/3.8.7/libexec/conf"/>
    <property name="jdk.debug" value="release"/>
    <property name="java.class.version" value="63.0"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="13.1"/>
    <property name="library.jansi.path" value="/opt/homebrew/Cellar/maven/3.8.7/libexec/lib/jansi-native"/>
    <property name="user.home" value="/Users/aparna"/>
    <property name="user.timezone" value="America/Chicago"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.specification.version" value="19"/>
    <property name="user.name" value="aparna"/>
    <property name="java.class.path" value="/opt/homebrew/Cellar/maven/3.8.7/libexec/boot/plexus-classworlds-2.6.0.jar"/>
    <property name="java.vm.specification.version" value="19"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher surefire:test"/>
    <property name="java.home" value="/Library/Java/JavaVirtualMachines/jdk-19.jdk/Contents/Home"/>
    <property name="apple.awt.application.name" value="Launcher"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.version" value="19.0.2"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="/opt/homebrew/Cellar/maven/3.8.7/libexec"/>
    <property name="file.separator" value="/"/>
    <property name="java.version.date" value="2023-01-17"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="sun.cpu.endian" value="little"/>
  </properties>
  <testcase name="containsData" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.containsData(SelectorTest.java:727)
</error>
  </testcase>
  <testcase name="testByAttributeStarting" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.testByAttributeStarting(SelectorTest.java:150)
</error>
  </testcase>
  <testcase name="deeperDescendant" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.deeperDescendant(SelectorTest.java:283)
</error>
  </testcase>
  <testcase name="selectSameElements" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.selectSameElements(SelectorTest.java:708)
</error>
  </testcase>
  <testcase name="testPseudoEquals" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.testPseudoEquals(SelectorTest.java:458)
</error>
  </testcase>
  <testcase name="testByClassCaseInsensitive" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.testByClassCaseInsensitive(SelectorTest.java:58)
</error>
  </testcase>
  <testcase name="testByAttributeRegexCharacterClass" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.testByAttributeRegexCharacterClass(SelectorTest.java:173)
</error>
  </testcase>
  <testcase name="testAllWithClass" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.testAllWithClass(SelectorTest.java:207)
</error>
  </testcase>
  <testcase name="testByTag" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.testByTag(SelectorTest.java:23)
</error>
  </testcase>
  <testcase name="testById" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.testById(SelectorTest.java:34)
</error>
  </testcase>
  <testcase name="findBetweenSpan" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.findBetweenSpan(SelectorTest.java:811)
</error>
  </testcase>
  <testcase name="descendant" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.descendant(SelectorTest.java:241)
</error>
  </testcase>
  <testcase name="handlesCommasInSelector" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.handlesCommasInSelector(SelectorTest.java:665)
</error>
  </testcase>
  <testcase name="notAll" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.notAll(SelectorTest.java:648)
</error>
  </testcase>
  <testcase name="testByAttribute" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.testByAttribute(SelectorTest.java:69)
</error>
  </testcase>
  <testcase name="selectClassWithSpace" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.selectClassWithSpace(SelectorTest.java:689)
</error>
  </testcase>
  <testcase name="notAdjacent" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.notAdjacent(SelectorTest.java:372)
</error>
  </testcase>
  <testcase name="testCombinedWithContains" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.testCombinedWithContains(SelectorTest.java:188)
</error>
  </testcase>
  <testcase name="containsWithQuote" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.containsWithQuote(SelectorTest.java:751)
</error>
  </testcase>
  <testcase name="testPseudoGreaterThan" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.testPseudoGreaterThan(SelectorTest.java:450)
</error>
  </testcase>
  <testcase name="testAllElements" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.testAllElements(SelectorTest.java:197)
</error>
  </testcase>
  <testcase name="testByAttributeRegex" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.testByAttributeRegex(SelectorTest.java:164)
</error>
  </testcase>
  <testcase name="mixCombinator" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.mixCombinator(SelectorTest.java:379)
</error>
  </testcase>
  <testcase name="testRelaxedTags" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.testRelaxedTags(SelectorTest.java:622)
</error>
  </testcase>
  <testcase name="testPseudoBetween" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.testPseudoBetween(SelectorTest.java:471)
</error>
  </testcase>
  <testcase name="testPseudoLessThan" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.testPseudoLessThan(SelectorTest.java:441)
</error>
  </testcase>
  <testcase name="testGroupOr" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.testGroupOr(SelectorTest.java:214)
</error>
  </testcase>
  <testcase name="testByClass" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.testByClass(SelectorTest.java:44)
</error>
  </testcase>
  <testcase name="and" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.and(SelectorTest.java:262)
</error>
  </testcase>
  <testcase name="attributeWithBrackets" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.attributeWithBrackets(SelectorTest.java:718)
</error>
  </testcase>
  <testcase name="testPsuedoContainsWithParentheses" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.testPsuedoContainsWithParentheses(SelectorTest.java:560)
</error>
  </testcase>
  <testcase name="testGroupOrAttribute" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.testGroupOrAttribute(SelectorTest.java:231)
</error>
  </testcase>
  <testcase name="caseInsensitive" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.caseInsensitive(SelectorTest.java:345)
</error>
  </testcase>
  <testcase name="selectFirst" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.selectFirst(SelectorTest.java:759)
</error>
  </testcase>
  <testcase name="containsOwn" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.containsOwn(SelectorTest.java:572)
</error>
  </testcase>
  <testcase name="testCharactersInIdAndClass" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.testCharactersInIdAndClass(SelectorTest.java:410)
</error>
  </testcase>
  <testcase name="splitOnBr" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.splitOnBr(SelectorTest.java:793)
</error>
  </testcase>
  <testcase name="multiChildDescent" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.multiChildDescent(SelectorTest.java:337)
</error>
  </testcase>
  <testcase name="adjacentSiblingsWithId" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.adjacentSiblingsWithId(SelectorTest.java:364)
</error>
  </testcase>
  <testcase name="testMatches" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.testMatches(SelectorTest.java:585)
</error>
  </testcase>
  <testcase name="matchText" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.matchText(SelectorTest.java:777)
</error>
  </testcase>
  <testcase name="selectFirstWithOr" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.selectFirstWithOr(SelectorTest.java:771)
</error>
  </testcase>
  <testcase name="matchTextAttributes" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.matchTextAttributes(SelectorTest.java:803)
</error>
  </testcase>
  <testcase name="parentWithClassChild" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.parentWithClassChild(SelectorTest.java:311)
</error>
  </testcase>
  <testcase name="generalSiblings" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.generalSiblings(SelectorTest.java:400)
</error>
  </testcase>
  <testcase name="parentChildStar" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.parentChildStar(SelectorTest.java:327)
</error>
  </testcase>
  <testcase name="testPseudoCombined" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.testPseudoCombined(SelectorTest.java:478)
</error>
  </testcase>
  <testcase name="testPseudoContains" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.testPseudoContains(SelectorTest.java:534)
</error>
  </testcase>
  <testcase name="testPseudoHas" classname="org.jsoup.select.SelectorTest" time="0.002">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.testPseudoHas(SelectorTest.java:485)
</error>
  </testcase>
  <testcase name="notClass" classname="org.jsoup.select.SelectorTest" time="0.001">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.notClass(SelectorTest.java:657)
</error>
  </testcase>
  <testcase name="notParas" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.notParas(SelectorTest.java:634)
</error>
  </testcase>
  <testcase name="selectSupplementaryCharacter" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.selectSupplementaryCharacter(SelectorTest.java:679)
</error>
  </testcase>
  <testcase name="adjacentSiblings" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.adjacentSiblings(SelectorTest.java:355)
</error>
  </testcase>
  <testcase name="testNamespacedTag" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.testNamespacedTag(SelectorTest.java:108)
</error>
  </testcase>
  <testcase name="testNestedHas" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.testNestedHas(SelectorTest.java:515)
</error>
  </testcase>
  <testcase name="parentChildElement" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.parentChildElement(SelectorTest.java:297)
</error>
  </testcase>
  <testcase name="testByAttributeRegexCombined" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.testByAttributeRegexCombined(SelectorTest.java:181)
</error>
  </testcase>
  <testcase name="matchesOwn" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.matchesOwn(SelectorTest.java:612)
</error>
  </testcase>
  <testcase name="testSupportsLeadingCombinator" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.testSupportsLeadingCombinator(SelectorTest.java:426)
</error>
  </testcase>
  <testcase name="mixCombinatorGroup" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.mixCombinatorGroup(SelectorTest.java:389)
</error>
  </testcase>
  <testcase name="testWildcardNamespacedTag" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.testWildcardNamespacedTag(SelectorTest.java:129)
</error>
  </testcase>
  <testcase name="selectFirstWithAnd" classname="org.jsoup.select.SelectorTest" time="0">
    <error message="String input must not be null" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: String input must not be null
	at org.jsoup.select.SelectorTest.selectFirstWithAnd(SelectorTest.java:765)
</error>
  </testcase>
</testsuite>